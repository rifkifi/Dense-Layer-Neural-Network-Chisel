FIRRTL version 1.2.0
circuit DenseLayer :
  module DenseLayer : @[\\src\\main\\scala\\DenseLayer.scala 25:7]
    input clock : Clock @[\\src\\main\\scala\\DenseLayer.scala 25:7]
    input reset : UInt<1> @[\\src\\main\\scala\\DenseLayer.scala 25:7]
    input io_in_0 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_in_1 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_w_0_0 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_w_0_1 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_w_1_0 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_w_1_1 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_b_0 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    input io_b_1 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    output io_out_0 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]
    output io_out_1 : SInt<8> @[\\src\\main\\scala\\DenseLayer.scala 26:14]

    node _products_T = mul(io_in_0, io_w_0_0) @[\\src\\main\\scala\\DenseLayer.scala 45:17]
    node products_0 = shr(_products_T, 6) @[\\src\\main\\scala\\DenseLayer.scala 45:31]
    node _products_T_1 = mul(io_in_1, io_w_0_1) @[\\src\\main\\scala\\DenseLayer.scala 45:17]
    node products_1 = shr(_products_T_1, 6) @[\\src\\main\\scala\\DenseLayer.scala 45:31]
    node _sum_T = add(products_0, products_1) @[\\src\\main\\scala\\DenseLayer.scala 47:33]
    node sum = add(_sum_T, io_b_0) @[\\src\\main\\scala\\DenseLayer.scala 47:39]
    node _io_out_0_clamped_T = gt(sum, asSInt(UInt<12>("h7f"))) @[\\src\\main\\scala\\DenseLayer.scala 37:25]
    node _io_out_0_clamped_T_1 = lt(sum, asSInt(UInt<12>("hf80"))) @[\\src\\main\\scala\\DenseLayer.scala 37:43]
    node _io_out_0_clamped_T_2 = mux(_io_out_0_clamped_T_1, asSInt(UInt<12>("hf80")), sum) @[\\src\\main\\scala\\DenseLayer.scala 37:40]
    node io_out_0_clamped = mux(_io_out_0_clamped_T, asSInt(UInt<12>("h7f")), _io_out_0_clamped_T_2) @[\\src\\main\\scala\\DenseLayer.scala 37:22]
    node _io_out_0_T = asUInt(io_out_0_clamped) @[\\src\\main\\scala\\DenseLayer.scala 38:21]
    node _io_out_0_T_1 = asSInt(_io_out_0_T) @[\\src\\main\\scala\\DenseLayer.scala 38:21]
    node _products_T_2 = mul(io_in_0, io_w_1_0) @[\\src\\main\\scala\\DenseLayer.scala 45:17]
    node products_0_1 = shr(_products_T_2, 6) @[\\src\\main\\scala\\DenseLayer.scala 45:31]
    node _products_T_3 = mul(io_in_1, io_w_1_1) @[\\src\\main\\scala\\DenseLayer.scala 45:17]
    node products_1_1 = shr(_products_T_3, 6) @[\\src\\main\\scala\\DenseLayer.scala 45:31]
    node _sum_T_1 = add(products_0_1, products_1_1) @[\\src\\main\\scala\\DenseLayer.scala 47:33]
    node sum_1 = add(_sum_T_1, io_b_1) @[\\src\\main\\scala\\DenseLayer.scala 47:39]
    node _io_out_1_clamped_T = gt(sum_1, asSInt(UInt<12>("h7f"))) @[\\src\\main\\scala\\DenseLayer.scala 37:25]
    node _io_out_1_clamped_T_1 = lt(sum_1, asSInt(UInt<12>("hf80"))) @[\\src\\main\\scala\\DenseLayer.scala 37:43]
    node _io_out_1_clamped_T_2 = mux(_io_out_1_clamped_T_1, asSInt(UInt<12>("hf80")), sum_1) @[\\src\\main\\scala\\DenseLayer.scala 37:40]
    node io_out_1_clamped = mux(_io_out_1_clamped_T, asSInt(UInt<12>("h7f")), _io_out_1_clamped_T_2) @[\\src\\main\\scala\\DenseLayer.scala 37:22]
    node _io_out_1_T = asUInt(io_out_1_clamped) @[\\src\\main\\scala\\DenseLayer.scala 38:21]
    node _io_out_1_T_1 = asSInt(_io_out_1_T) @[\\src\\main\\scala\\DenseLayer.scala 38:21]
    node _io_out_0_WIRE = asSInt(bits(_io_out_0_T_1, 7, 0)) @[\\src\\main\\scala\\DenseLayer.scala 38:{21,21}]
    node _io_out_1_WIRE = asSInt(bits(_io_out_1_T_1, 7, 0)) @[\\src\\main\\scala\\DenseLayer.scala 38:{21,21}]
    io_out_0 <= _io_out_0_WIRE @[\\src\\main\\scala\\DenseLayer.scala 57:15]
    io_out_1 <= _io_out_1_WIRE @[\\src\\main\\scala\\DenseLayer.scala 57:15]
